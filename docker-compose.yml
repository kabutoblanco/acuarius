version: '3.5'

services:
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery_worker:
    container_name: celery_worker
    build: .
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A acuarius worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis

  celery_beat:
    container_name: celery_beat
    build: .
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A acuarius beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis

  web:
    container_name: web
    build: .
    ports:
      - "8000:8000"
    expose:
      - 8000
    volumes:
      - ./db.sqlite3:/app/db.sqlite3
      - ./static:/app/static
      - ./media:/app/media
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
      - ./certbot/conf:/etc/letsencrypt
    command: >
      sh -c "gunicorn acuarius.wsgi:application --bind 0.0.0.0:8000"
    depends_on:
      - redis
    networks:
      - app-network

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      args:
        - NGINX_CONFIG=${NGINX_CONFIG}
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    networks:
        - app-network

volumes:
  redis_data:
      driver: local
  media_volume:
  static_volume:

networks:
    app-network:
        driver: bridge